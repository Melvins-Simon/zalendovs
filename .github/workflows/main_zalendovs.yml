name: Build and deploy Node.js app to Azure Web App - zalendovs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      NODE_OPTIONS: --max-old-space-size=4096  # Memory limit fix

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'  # Cache dependencies for faster builds

      - name: Clean install dependencies
        run: |
          rm -rf node_modules
          npm ci
          cd client && npm ci

      - name: Build client
        run: |
          cd client && npm run build
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Create optimized deployment package
        run: |
          # Create clean deployment structure
          mkdir -p deployment
          
          # Copy server files
          cp package*.json deployment/
          cp -r server deployment/
          
          # Copy built client files
          mkdir -p deployment/client
          cp -r client/dist deployment/client/
          
          # Create .env with Azure required settings
          echo "PORT=8080" > deployment/.env
          echo "NODE_ENV=production" >> deployment/.env
          
          # Create zip package
          cd deployment && zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: |
          mkdir -p deployment
          unzip -q release.zip -d deployment

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'zalendovs'
          slot-name: 'Production'
          package: deployment
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_108B0C94D58C44839A2CA418B2D18AEE }}

      - name: Verify deployment
        run: |
          echo "Checking if app is live..."
          sleep 30  # Wait for app to start
          curl -s ${{ steps.deploy-to-webapp.outputs.webapp-url }} | grep -q "YourAppContent" || exit 1
