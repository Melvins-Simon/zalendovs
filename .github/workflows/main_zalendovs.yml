on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      # 1. Initial Setup
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"

      # 2. Server Installation
      - name: Install Server Dependencies
        run: |
          # Clean environment
          find . -name 'node_modules' -exec rm -rf {} +

          # Install build tools
          sudo apt-get update
          sudo apt-get install -y build-essential python3

          # Install server deps
          npm ci --no-bin-links --legacy-peer-deps

      # 3. Client Installation & Build
      - name: Install Client Dependencies
        run: |
          cd client
          npm ci --no-bin-links --legacy-peer-deps --include=dev
          cd ..

      - name: Build Client
        run: |
          cd client
          npm run build
          # Verify build output exists
          test -f dist/index.html || (echo "Build failed - no index.html" && exit 1)
          cd ..

      # 4. Prepare Deployment Package
      - name: Create Deployment Bundle
        run: |
          mkdir -p deployment

          # Copy server files
          cp -r server deployment/
          cp package*.json deployment/

          # Copy built client
          mkdir -p deployment/client/dist
          cp -r client/dist/* deployment/client/dist/

          # Azure configuration
          echo "PORT=8080" > deployment/.env
          echo "NODE_ENV=production" >> deployment/.env

          # Startup script
          echo "#!/bin/sh" > deployment/startup.sh
          echo "cd /home/site/wwwroot" >> deployment/startup.sh
          echo "npm ci --production" >> deployment/startup.sh
          echo "node server/server.js" >> deployment/startup.sh
          chmod +x deployment/startup.sh

          # Create zip
          cd deployment && zip -r ../release.zip .

      # 5. Deploy (Updated artifact actions)
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: release.zip

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: "zalendovs"
          slot-name: "Production"
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_108B0C94D58C44839A2CA418B2D18AEE }}
          startup-command: "bash startup.sh"

      # 6. Verification
      - name: Health Check
        run: |
          echo "Waiting for app to start..."
          sleep 45  # Extended timeout
          curl -sSf ${{ steps.deploy-to-webapp.outputs.webapp-url }}/health || \
            (echo "Health check failed"; exit 1)
